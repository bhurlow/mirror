{:rename-macros {}, :renames {}, :use-macros {}, :excludes #{}, :name pages.index, :imports nil, :requires {u pages.util, pages.util pages.util, tools mirror.tools, mirror.tools mirror.tools, r reagent.core, reagent.core reagent.core}, :uses nil, :defs {state {:name pages.index/state, :file "example/pages/index.cljc", :line 13, :column 1, :end-line 13, :end-column 11, :meta {:file "/Users/pretzel/code/mirror/example/pages/index.cljc", :line 13, :column 6, :end-line 13, :end-column 11}}, handle-click {:protocol-inline nil, :meta {:file "/Users/pretzel/code/mirror/example/pages/index.cljc", :line 15, :column 7, :end-line 15, :end-column 19, :arglists (quote ([e]))}, :name pages.index/handle-click, :variadic false, :file "example/pages/index.cljc", :end-column 19, :method-params ([e]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 15, :end-line 15, :max-fixed-arity 1, :fn-var true, :arglists (quote ([e]))}, render {:protocol-inline nil, :meta {:file "/Users/pretzel/code/mirror/example/pages/index.cljc", :line 20, :column 7, :end-line 20, :end-column 13, :arglists (quote ([]))}, :name pages.index/render, :variadic false, :file "example/pages/index.cljc", :end-column 13, :method-params ([]), :protocol-impl nil, :arglists-meta (nil nil), :column 1, :line 20, :end-line 20, :max-fixed-arity 0, :fn-var true, :arglists (quote ([]))}}, :require-macros {r reagent.core, reagent.core reagent.core}, :cljs.analyzer/constants {:seen #{pages.index :button :ns :name :file :end-column :on-click :column :div pages.index/render :line :end-line render :h1 :arglists :doc :p :test}, :order [:div :h1 :p :button :on-click pages.index/render :ns :name :file :end-column :column :line :end-line :arglists :doc :test pages.index render]}, :doc nil}